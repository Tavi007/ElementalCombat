buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
    }
    dependencies {
        classpath "org.spongepowered:mixingradle:0.7.+"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_id}-forge"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${version_mc}"
	
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                elementalcombat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                elementalcombat {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'elementalcombat', '--all', '--output', file('src/generated/resources/')

            mods {
                elementalcombat {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_forge}"

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${version_curios}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${version_curios}")
	
    compileOnly fg.deobf("mezz.jei:jei-${version_jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${version_jei}")
    
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")
    
    implementation fg.deobf(fileTree(dir: 'libs', include: '*.jar'))
}

repositories {
    mavenCentral()
    maven { 
        name = "curios"
        url = "https://maven.theillusivec4.top/" 
    }
    maven {
        // location of the maven that hosts JEI files
        name = "jei"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    flatDir {
        dirs("libs")
    }
}


mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "${mod_name}",
            "Specification-Vendor": "${mod_author}",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${mod_name}",
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"${mod_author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// API jar
task apiJar(type: Jar) {
    classifier = 'api'
    include 'Tavi007/ElementalCombat/api/*'
    include 'Tavi007/ElementalCombat/capabilities/attack/AttackLayer.*'
    include 'Tavi007/ElementalCombat/capabilities/defense/DefenseLayer.*'
    include 'Tavi007/ElementalCombat/config/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

test {
    useJUnitPlatform()
}

tasks.build.dependsOn apiJar, sourcesJar

//jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName
            version = version
            artifact jar
        }
    }
}